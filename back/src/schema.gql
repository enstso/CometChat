# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Conversation {
  id: ID!
  messages: [Message!]!
  participants: [ConversationParticipant!]!
}

type ConversationEdge {
  cursor: String!
  node: Conversation!
}

type ConversationPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type ConversationParticipant {
  id: String!
  user: User!
}

type ConversationRelay {
  edges: [ConversationEdge!]!
  pageInfo: ConversationPageInfo!
}

input CreateConversationInput {
  userId1: ID!
  userId2: ID!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type HealthCheckResponse {
  result: String!
}

type Message {
  content: String!
  createdAt: DateTime!
  id: ID!
  sender: User!
}

type MessageEdge {
  cursor: String!
  node: Message!
}

type MessagePageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type MessageRelay {
  edges: [MessageEdge!]!
  pageInfo: MessagePageInfo!
}

type Mutation {
  createConversation(input: CreateConversationInput!): Conversation!
  sendMessage(sendMessageInput: SendMessageInput!): String!
}

type Query {
  getMessages(conversationId: String!, cursor: String, limit: Float): MessageRelay!
  getUserConversations(cursor: String, limit: Int! = 5): ConversationRelay!
  healthCheck: HealthCheckResponse!
  hello: String!
  me: User!
}

input SendMessageInput {
  content: String!
  conversationId: ID!
  senderId: ID!
}

type User {
  email: String
  id: ID!
  username: String!
}